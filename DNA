#include<stdio.h>
#include<stdlib.h>
#include<string.h>
struct DNA
{
        char nucleotide[100];
};
struct genome
{
        struct DNA nucleotides[100];
        int t;
};
struct result
{
        int string_len;
        int count_of_repeated_string[10];
};
void display(struct result z,struct genome k)
{
        for(int i=0;i<k.t;i++)
        {
                printf("%d\n",z.count_of_repeated_string[i]);
        }
}
struct result compute(struct genome k)
{
        struct result z;
        for(int i=0;i<k.t;i++)
        {
                for(int j=0;j<(strlen(k.nucleotides[i].nucleotide));j++)
                {
                        for(int h=j+1;h<strlen(k.nucleotides[i].nucleotide);h++)
                        {
                                if(k.nucleotides[i].nucleotide[j]==k.nucleotides[i].nucleotide[h])
                                {
                                        z.count_of_repeated_string[i]=j+1;
                                }
                        }
                }
          }
        return z;
}
struct genome input()
{
        struct genome k;
        printf("Enter the number of test cases\n");
        scanf("%d",&k.t);
        for(int i=0;i<k.t;i++)
        {
                if(i==0)
                {
                        printf("Enter the %dst test case\n",i+1);
                        scanf("%s",k.nucleotides[i].nucleotide);
                }
                else if(i==1)
                {
                        printf("Enter the %dnd test case\n",i+1);
                        scanf("%s",k.nucleotides[i].nucleotide);
                }
                                else if(i==2)
                {
                        printf("Enter the %drd point test case\n",i+1);
                        scanf("%s",k.nucleotides[i].nucleotide);
                }
                else
                {
                        printf("Enter the %dth test case\n",i+1);
                        scanf("%s",k.nucleotides[i].nucleotide);

                }
        }
        return k;
}
int main()
{
        struct genome k;
        struct result z;
        k=input();
        z=compute(k);
        display(z,k);
}

